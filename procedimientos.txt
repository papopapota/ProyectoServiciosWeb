-- =============================================================================
--              PROCEDIMIENTOS BRAYAN (CRUD PRODUCTOS)
-- =============================================================================
use DB_RefriVirtual
go

create or alter procedure usp_producto_listarVCliente	
as
begin
	select idProducto, nombre, precio, stock, descripcion, imagen from tb_producto where estado = 1
end 
go

select * from tb_producto
-- LISTA PRODUCTOS ADMIN
create or alter procedure usp_productos_listaVAdmin
as 
begin
	select idProducto, nombre, precio, stock, descripcion, estado from tb_producto;
end
go

exec usp_productos_listaVAdmin
go

-- REGISTRAR PRODUCTOS
create or alter procedure usp_Productos_Agregar
@idProducto char(4),
@nombre varchar(50),
@precio float,
@stock int,
@descripcion varchar(100),
@estado bit
AS
begin
	insert tb_producto values (@idProducto, @nombre, @precio,@stock,@descripcion, null,@estado)
end
go

-- ACTUALIZAR PRODUCTOS
create or alter procedure usp_productos_actualizar
@id char (4),
@nombre varchar (50),
@precio float,
@stock int,
@descripcion varchar (100),
@estado bit
as
begin
	update tb_producto set	nombre = @nombre, 
							precio = @precio, 
							stock = @stock, 
							descripcion = @descripcion,
							estado = @estado
	where idProducto = @id;
end
go



-- ==========================================================================
--- 		PROCEDIMIENTOS CARLOS (CRUD RECETAS)
-- ==========================================================================


create or alter proc sp_listar_receta
as
begin
	select * from tb_receta
end
exec sp_listar_receta

create or alter proc [dbo].[sp_delete_receta]
@IdReceta char(4)
as
begin
	delete from tb_receta where idReceta = @IdReceta
end


create or ALTER proc [dbo].[sp_merge_receta](
    @p_idReceta CHAR(4),
    @p_nombre VARCHAR(50),
    @p_imagen VARCHAR(100),
    @p_preparacion VARCHAR(350)
	)
as
begin
-- Realizar la operaci√≥n MERGE
    MERGE INTO tb_receta AS target
    USING (
        VALUES (@p_idReceta, @p_nombre, @p_imagen, @p_preparacion)
    ) AS source (Id, Nombre, Imagen, Preparacion)
    ON target.idReceta = source.Id
    WHEN MATCHED THEN
        UPDATE SET 
            target.nombre = source.Nombre, 
            target.imagen = source.Imagen,
            target.preparacion = source.Preparacion
    WHEN NOT MATCHED THEN
        INSERT (idReceta, nombre, imagen, preparacion)
        VALUES (source.Id, source.Nombre, source.Imagen, source.Preparacion);
;
end


-- ==========================================================================
--- 		PROCEDIMIENTOS Daniel (USuario)
-- ==========================================================================

create or alter procedure usp_ValidarUsuario (
    @idusuario int 
)
as
    begin
    select * from tb_usuario where @idusuario = idusuario; 
    end;


create or alter procedure usp_GenerarCodigo 
as
begin
    select MAX(idusuario)+1 maximo  from tb_usuario order by maximo DESC
end;



create or alter procedure usp_BuscarUsuario(
@idUsuario int
) 
as
begin
    select *  from tb_usuario where idUsuario=  @idUsuario
end;


create or alter procedure usp_ActualizarUsuario(
@idUsuario int,
@nombres varchar(100),
@apellidos varchar(100),
@email varchar(100),
@telefono varchar(100),
@contrasena varchar(100),
@tipoUsuario int , 
@estado int ,
@idMembrecia int 
) 
as
begin
    update tb_usuario set idUsuario=@idUsuario ,
nombres=@nombres ,apellidos=@apellidos ,email=@email ,telefono=@telefono ,contrasena=@contrasena ,tipoUsuario=@tipoUsuario ,estado=@estado ,idMembrecia=@idMembrecia  
end;

create or alter procedure usp_RegistrarUsuario(
@idUsuario int,
@nombres varchar(100),
@apellidos varchar(100),
@email varchar(100),
@telefono varchar(100),
@contrasena varchar(100),
@tipoUsuario int , 
@estado int ,
@idMembrecia int 
) 
as
begin
    insert into tb_usuario values (@idUsuario ,@nombres ,@apellidos ,@email ,@telefono ,@contrasena ,@tipoUsuario ,@estado ,@idMembrecia) 
end;


-- =============================================================================
--              PROCEDIMIENTOS Gerardo (refri)
-- =============================================================================

create or alter procedure usp_refri_mostraprod 
@idrefri int 
as
begin
	select dt.idProducto, p.nombre, dt.cantidad from tb_detalleRefri as dt INNER JOIN tb_producto as p ON dt.idProducto = p.idProducto
	where idRefri = @idrefri
end
go

create or alter procedure usp_merge_refriprod
@id int,
@idProd char(4),
@cantidad int
as
merge tb_detalleRefri as target
using (Select @id,@idProd,@cantidad) AS source(refri, prod, cantidad)
ON target.idRefri=source.refri AND target.idProducto=source.prod
when matched then
	update set target.idRefri=source.refri,target.idProducto=source.prod, target.cantidad=source.cantidad
when not matched then
	Insert values(source.refri,source.prod,source.cantidad);
go

select * from tb_detalleRefri



